package modelo;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.Objects;

public class Pet {

	private int id;
	private String fornecedor;
	private String produto;
	private String preco;
	private float peso;
	private Date nascimento;
	private String nomeDono;
	private String telefone;

	private final Locale BRASIL = new Locale("pt", "BR");
	private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
	private DecimalFormat df = new DecimalFormat("#.00");

	// Contrutor só com Id
	public Pet(int id) {
		this.id = id;
	}

	// Construtor completo
	public Pet(int id, String fornecedor, String produto, String preco, float peso, String nascimento, String nomeDono,
			String telefone) {
		this.id = id;
		this.fornecedor = fornecedor;
		this.produto = produto;
		this.preco = preco;
		this.peso = peso;
		try {
			this.nascimento = sdf.parse(nascimento);
		} catch (ParseException e) {
			System.out.println(e);
		}
		this.nomeDono = nomeDono;
		this.telefone = telefone;
	}

	// Construtor para receber dados do arquivo
	public Pet(String linha) {
		df.setCurrency(Currency.getInstance(BRASIL));
		
		this.id = Integer.parseInt(linha.split(";")[0]);
		this.fornecedor = linha.split(";")[1];
		this.produto = linha.split(";")[2];
		this.preco = linha.split(";")[3];
		try {
			this.peso = Float.parseFloat(df.parse(linha.split(";")[4]).toString());
			this.nascimento = sdf.parse(linha.split(";")[5]);
		} catch (ParseException e) {
			System.out.println(e);
		}
		this.nomeDono = linha.split(";")[6];
		this.telefone = linha.split(";")[7];
	}

	// Getters && Setters
	public int getId() {
		return id;
	}

	public String getId(String s) {
		return String.format("%d", id);
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getfornecedor() {
		return fornecedor;
	}

	public void setfornecedor(String fornecedor) {
		this.fornecedor = fornecedor;
	}

	public String getproduto() {
		return produto;
	}

	public void setproduto(String produto) {
		this.produto = produto;
	}

	public String getpreco() {
		return preco;
	}

	public void setpreco(String preco) {
		this.preco = preco;
	}

	public float getPeso() {
		return peso;
	}

	// Define o "id" como campo Chave
	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	// Define o "id" como campo Chave
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Orcamento other = (Orcamento) obj;
		return id == other.id;
	}

	@Override
	public String toString() {
		return id + "\t" + fornecedor + "\t" + produto + "\t" + preco + "\t" + String.format("%.2f", peso) + "\t" + nomeDono + "\t" + telefone + "\n";
	}

	public String toCSV() {
		return id + ";" + fornecedor + ";" + produto + ";" + preco + ";" + String.format("%.2f", peso) + ";"
				+ sdf.format(nascimento) + ";" + nomeDono + ";" + telefone + "\r\n";
	}

}
